{"version":3,"sources":["components/layout/Signin.js","store/actions/authActions.js","components/layout/Signout.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/Signin.js","components/auth/Signup.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducers.js","store/reducers/rootReducers.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLink","state","console","log","firebase","links","uid","Notification","notification","map","item","key","id","user","content","ProjectSummary","project","title","authorFirstname","authorLastname","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","name","authorId","add","createdAt","Date","App","exact","path","component","ProjectDetail","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"wQAuBeA,cAAQ,MALI,SAAAC,GACvB,MAAO,CACHC,QAAS,kBAAMD,GCLZ,SAACA,EAAUE,EAAX,IACcC,EADwB,EAAhBA,eAGhBC,OAAOH,UAAUI,MAAK,WAC3BL,EAAS,CAAEM,KAAM,8BDIdP,EAjBM,SAACQ,GAElB,OACG,wBAAIC,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,gBACJ,4BAAI,uBAAGC,QAASH,EAAMN,SAAlB,YACJ,4BAAI,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,mCAAmCD,EAAMI,QAAQC,eED3EC,EARO,WAClB,OACG,wBAAIL,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,YCmBAV,eAPS,SAAAe,GAEpB,OADAC,QAAQC,IAAIF,GACL,CACHV,KAAMU,EAAMG,SAASb,KACrBO,QAASG,EAAMG,SAASN,WAGjBZ,EApBA,SAACQ,GAAW,IACfH,EAAkBG,EAAlBH,KAAMO,EAAYJ,EAAZI,QACdI,QAAQC,IAAI,OAAQZ,GACpB,IAAMc,EAAQd,EAAKe,IAAM,kBAAC,EAAD,CAAeR,QAASA,IAAa,kBAAC,EAAD,MAC9D,OACI,yBAAKH,UAAU,6BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,cACCU,O,wCCiBFE,EA5BM,SAAAb,GAAU,IACnBc,EAAiBd,EAAjBc,aACR,OACI,yBAAKb,UAAU,WACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,gBACA,wBAAIA,UAAU,iBACVa,GAAgBA,EAAaC,KAAI,SAAAC,GAAI,OACjC,wBAAIC,IAAKD,EAAKE,IACV,0BAAMjB,UAAU,aAAae,EAAKG,MAClC,8BAAOH,EAAKI,kBCK7BC,EAhBQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACI,yBAAKrB,UAAU,kCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAcqB,EAAQC,OACtC,wCAAcD,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChD,uBAAGxB,UAAU,aAAb,sBCcDyB,EAlBK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,yBAAK1B,UAAU,wBACT0B,GAAYA,EAASZ,KAAI,SAAAO,GACvB,OACI,kBAAC,IAAD,CAAMpB,GAAI,YAAcoB,EAAQJ,GAAID,IAAKK,EAAQJ,IAC7C,kBAAC,EAAD,CAAgBI,QAASA,U,gBCF3CM,E,iLACQ,IAAD,EACoCC,KAAK7B,MAAtC2B,EADH,EACGA,SAAU9B,EADb,EACaA,KAAMiB,EADnB,EACmBA,aAExB,OAAIjB,EAAKe,IAGL,yBAAKX,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAa0B,SAAUA,KAE3B,yBAAK1B,UAAU,wBACX,kBAAC,EAAD,CAAca,aAAcA,OATvB,kBAAC,IAAD,CAAUZ,GAAG,e,GAJlB4B,aAiCTC,cACXvC,aAVoB,SAAAe,GACpB,MAAO,CAEHoB,SAAUpB,EAAMyB,UAAUC,QAAQN,SAClC9B,KAAMU,EAAMG,SAASb,KACrBiB,aAAcP,EAAMyB,UAAUC,QAAQnB,iBAM1CoB,2BAAiB,CACb,CAAEC,WAAW,WAAYC,QAAQ,CAAC,YAAa,SAC/C,CAAED,WAAY,eAAgBE,MAAM,EAAGD,QAAQ,CAAC,OAAQ,WAJjDL,CAMbH,GCEaG,cACXvC,aAVoB,SAACe,EAAO+B,GAC5B,IAAMpB,EAAKoB,EAASC,MAAMC,OAAOtB,GAC3BS,EAAWpB,EAAMyB,UAAUS,KAAKd,SAEtC,MAAO,CACHL,QAFYK,EAAWA,EAAST,GAAM,KAGtCrB,KAAMU,EAAMG,SAASb,SAKzBqC,2BAAiB,CACb,CAACC,WAAY,cAHNJ,EA1CO,SAAC/B,GACRA,EAAMuC,MAAMC,OAAOtB,GAA9B,IACQI,EAAkBtB,EAAlBsB,QAASzB,EAASG,EAATH,KAGjB,OAFAW,QAAQC,IAAI,OAAO,CAAEa,YAEjBzB,EAAKe,IAENU,EAEK,yBAAKrB,UAAU,sCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAcqB,EAAQC,OACtC,2BAAID,EAAQF,UAEhB,yBAAKnB,UAAU,wCACX,0CAAgBqB,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClD,oDAQZ,yBAAKxB,UAAU,oBAAf,yBApBa,kBAAC,IAAD,CAAUC,GAAG,c,QCRzBwC,EAAb,2MACInC,MAAM,CACFoC,MAAO,GACPC,SAAU,IAHlB,EAKIC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAO9B,GAAK4B,EAAEE,OAAOC,SAPpC,EAUIC,aAAe,SAACJ,GACZA,EAAEK,iBACF3C,QAAQC,IAAI,SAAU,EAAKF,OAC3B,EAAKP,MAAMoD,OAAO,EAAK7C,QAb/B,wEAec,IAAD,EACsBsB,KAAK7B,MAAxBqD,EADH,EACGA,UAER,OAHK,EACcxD,KAEXe,IAAY,kBAAC,IAAD,CAAUV,GAAG,MAI7B,yBAAKD,UAAU,aACX,0BAAMqD,SAAUzB,KAAKqB,aAAcjD,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACX,2BAAOsD,QAAQ,SAAf,SACA,2BAAOxD,KAAK,QAAQmB,GAAG,QAAQsC,SAAU3B,KAAKgB,gBAElD,yBAAK5C,UAAU,eACX,2BAAOsD,QAAQ,YAAf,YACA,2BAAOxD,KAAK,WAAWmB,GAAG,WAAWsC,SAAU3B,KAAKgB,gBAExD,yBAAK5C,UAAU,eACX,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACVoD,EAAY,2BAAIA,GAAiB,WApC9D,GAA4BvB,aAuDbtC,eAXS,SAAAe,GACpB,MAAO,CACH8C,UAAW9C,EAAMV,KAAKwD,UACtBxD,KAAMU,EAAMG,SAASb,SAGF,SAAAJ,GACvB,MAAM,CACF2D,OAAQ,SAAAK,GAAK,OAAIhE,GRzDFiE,EQyDkBD,ERxD9B,SAAChE,EAAUE,EAAX,IACcC,EADwB,EAAhBA,eAGhBC,OAAO8D,2BACZD,EAAYf,MACZe,EAAYd,UACd9C,MAAK,WACHL,EAAS,CAAEM,KAAM,qBAClB6D,OAAM,SAACC,GACNpE,EAAS,CAAEM,KAAK,eAAiB8D,SAVvB,IAACH,MQ4DRlE,CAA6CkD,GCvD/CoB,EAAb,2MACIvD,MAAM,CACFoC,MAAO,GACPC,SAAU,GACVmB,UAAU,GACVC,SAAS,IALjB,EAOInB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAO9B,GAAK4B,EAAEE,OAAOC,SATpC,EAYIC,aAAe,SAACJ,GACZA,EAAEK,iBACF3C,QAAQC,IAAI,SAAU,EAAKF,OAC3B,EAAKP,MAAMiE,OAAO,EAAK1D,QAf/B,wEAiBc,IAAD,EACqBsB,KAAK7B,MAAxBH,EADF,EACEA,KAAMwD,EADR,EACQA,UACb,OAAGxD,EAAKe,IAAY,kBAAC,IAAD,CAAUV,GAAI,MAE9B,yBAAKD,UAAU,aACX,0BAAMqD,SAAUzB,KAAKqB,aAAcjD,UAAU,SACzC,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACX,2BAAOsD,QAAQ,SAAf,SACA,2BAAOxD,KAAK,QAAQmB,GAAG,QAAQsC,SAAU3B,KAAKgB,gBAElD,yBAAK5C,UAAU,eACX,2BAAOsD,QAAQ,YAAf,YACA,2BAAOxD,KAAK,WAAWmB,GAAG,WAAWsC,SAAU3B,KAAKgB,gBAExD,yBAAK5C,UAAU,eACX,2BAAOsD,QAAQ,aAAf,cACA,2BAAOxD,KAAK,OAAOmB,GAAG,YAAYsC,SAAU3B,KAAKgB,gBAErD,yBAAK5C,UAAU,eACX,2BAAOsD,QAAQ,YAAf,aACA,2BAAOxD,KAAK,OAAOmB,GAAG,WAAWsC,SAAU3B,KAAKgB,gBAEpD,yBAAK5C,UAAU,eACX,4BAAQA,UAAU,gCAAlB,YAEJ,yBAAKA,UAAU,mBACVoD,EAAY,2BAAKA,GAAiB,YA5C3D,GAA4BvB,aA+DbtC,eAZS,SAAAe,GACpB,MAAO,CACHV,KAAMU,EAAMG,SAASb,KACrBwD,UAAW9C,EAAMV,KAAKwD,cAGH,SAAA5D,GACvB,MAAM,CACFwE,OAAQ,SAAAC,GAAO,OAAIzE,ETzCL,SAAAyE,GAClB,OAAO,SAACzE,EAAUE,EAAX,GAAsD,IAAhCC,EAA+B,EAA/BA,YAAauE,EAAkB,EAAlBA,aAChCzD,EAAWd,IACXoC,EAAYmC,IAElBzD,EAASb,OAAOuE,+BACZF,EAAQvB,MACRuB,EAAQtB,UACV9C,MAAK,SAACuE,GACJ,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAAIlD,KAAKP,KAAK2D,IAAI,CACvDR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB3D,SAAU6D,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAEvDlE,MAAK,WACJL,EAAS,CAAEM,KAAM,uBAClB6D,OAAM,SAAAC,GACLpE,EAAS,CAAEM,KAAM,gBAAiB8D,YSwBVI,CAAOC,QAI5B1E,CAA6CsE,G,QC/D/CU,EAAb,2MACIjE,MAAM,CACFgB,MAAO,GACPH,QAAS,IAHjB,EAMIyB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAO9B,GAAK4B,EAAEE,OAAOC,SARpC,EAWIC,aAAe,SAACJ,GACZA,EAAEK,iBAEF,EAAKnD,MAAMyE,cAAc,EAAKlE,OAC9B,EAAKP,MAAM0E,QAAQC,KAAK,MAfhC,wEAoBQ,OAFiB9C,KAAK7B,MAAdH,KAECe,IAEL,yBAAKX,UAAU,aACX,0BAAMqD,SAAUzB,KAAKqB,aAAcjD,UAAU,SACzC,wBAAIA,UAAU,2BAAd,sBACA,yBAAKA,UAAU,eACX,2BAAOsD,QAAQ,SAAf,SACA,2BAAOxD,KAAK,OAAOmB,GAAG,QAAQsC,SAAU3B,KAAKgB,gBAEjD,yBAAK5C,UAAU,eACX,2BAAOsD,QAAQ,WAAf,WACA,8BAAUqB,KAAK,UAAU1D,GAAG,UAAUjB,UAAU,uBAAuBuD,SAAU3B,KAAKgB,gBAE1F,yBAAK5C,UAAU,eACX,4BAAQA,UAAU,gCAAlB,aAdK,kBAAC,IAAD,CAAUC,GAAG,eApB1C,GAAmC4B,aAmDpBtC,eAVS,SAAAe,GACpB,MAAO,CACHV,KAAMU,EAAMG,SAASb,SAGF,SAAAJ,GACvB,MAAO,CACHgF,cAAe,SAAAnD,GAAO,OAAI7B,ECrDL,SAAC6B,GAC1B,OAAO,SAAC7B,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IACrDoC,GAAYmC,EADwC,EAAnBA,gBAEjC/D,EAAUT,IAAWe,SAASN,QAC9ByE,EAAWlF,IAAWe,SAASb,KAAKe,IAC1CoB,EAAUG,WAAW,YAAY2C,IAAjC,eACOxD,EADP,CAEIE,gBAAiBpB,EAAQ2D,UACzBtC,eAAgBrB,EAAQ4D,SACxBa,SAAUA,EACVE,UAAW,IAAIC,QAChBlF,MAAK,WACJL,EAAS,CAAEM,KAAK,iBAAkBuB,eACnCsC,OAAM,SAACC,GACNpE,EAAS,CAAEM,KAAM,uBAAwB8D,YDuCVY,CAAcnD,QAG1C9B,CAA6CgF,GE7B7CS,EAjBJ,WACT,OACI,kBAAC,IAAD,KACE,yBAAKhF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,IAAIC,UAAWxD,IACjC,kBAAC,IAAD,CAAQuD,KAAK,eAAeC,UAAWC,IACvC,kBAAC,IAAD,CAAQF,KAAK,UAAUC,UAAW1C,IAClC,kBAAC,IAAD,CAAQyC,KAAK,UAAUC,UAAWtB,IAClC,kBAAC,IAAD,CAAQqB,KAAK,UAAUC,UAAWZ,QCR1Bc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlD,MACvB,2DClBN,IAAMmD,EAAY,CACdrC,UAAW,MAmCAsC,EAhCK,WAAgC,IAA/BpF,EAA8B,uDAAtBmF,EAAWE,EAAW,uCAC/C,OAAOA,EAAO7F,MACV,IAAK,cAED,OADAS,QAAQC,IAAI,eACL,eACAF,EADP,CAEI8C,UAAW,iBAEnB,IAAK,gBAED,OADA7C,QAAQC,IAAI,iBACL,eACAF,EADP,CAEI8C,UAAW,OAEnB,IAAK,kBAED,OADA7C,QAAQC,IAAI,mBACLF,EACX,IAAK,kBAED,OADAC,QAAQC,IAAI,kBACL,eACAF,EADP,CAEI8C,UAAW,OAEnB,IAAK,gBACD,sBACO9C,EADP,CAEI8C,UAAWuC,EAAO/B,IAAIgC,UAE9B,QACI,OAAOtF,ICjCbmF,EAAY,CACd/D,SAAS,CACL,CAACT,GAAI,EAAGK,MAAO,cAAeH,QAAS,eACvC,CAACF,GAAI,EAAGK,MAAO,gBAAiBH,QAAS,iBACzC,CAACF,GAAI,EAAGK,MAAO,eAAgBH,QAAS,kBAgBjC0E,EAZQ,WAAgC,IAA/BvF,EAA8B,uDAAtBmF,EAAWE,EAAW,uCAClD,OAAOA,EAAO7F,MACV,IAAK,iBAED,OADAS,QAAQC,IAAI,MAAOmF,EAAOtE,SACnBf,EACX,IAAK,uBAED,OADAC,QAAQC,IAAI,uBAAwBmF,EAAO/B,KACpCtD,EACX,QACI,OAAOA,I,QCLJwF,EANKC,YAAgB,CAChCnG,KAAM8F,EACNrE,QAASwE,EACT9D,UAAWiE,mBACXvF,SAAUwF,oB,wCCIZxF,IAASyF,cAVI,CACXC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAIThG,IAASsB,YAAY2E,SAAS,CAAEC,uBAAuB,IAExClG,QAAf,ECJImG,EAAQC,YAAYf,EACtBhE,YACIgF,YAAgBC,IAAMC,kBAAkB,CAAErH,0BAAauE,+BACvD+C,yBAAeC,GACfC,6BAAmBD,EAAU,CAACE,wBAAwB,EAAMC,YAAY,QAASC,mBAAmB,MAG5GV,EAAMW,oBAAoB1H,MAAK,WAC3B2H,IAASC,OACL,kBAAC,IAAD,CAAUb,MAAOA,GACb,kBAAC,EAAD,OAEFc,SAASC,eAAe,SL0G5B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjI,MAAK,SAAAkI,GACJA,EAAaC,gBAEdrE,OAAM,SAAAsE,GACL1H,QAAQ0H,MAAMA,EAAMrC,iB","file":"static/js/main.0644b253.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst SignedInLink = (props) => {\r\n    \r\n    return(\r\n       <ul className='right'>\r\n           <li><NavLink to='/create'>New Project</NavLink></li>\r\n           <li><a onClick={props.signOut}>Log out</a></li>\r\n           <li><NavLink to='/' className='btn btn-flaoting pink lighten-1'>{props.profile.initials}</NavLink></li>\r\n\r\n       </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLink)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() =>{\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) =>{\r\n            dispatch({ type:'LOGIN_ERROR' }, err)\r\n        })\r\n    }\r\n}\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\nexport const signUp = newUser => {\r\n    return (dispatch, getState,{ getFirebase, getFirestore }) =>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) =>{\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGN_UP_SUCCESS' })\r\n        }).catch(err =>{\r\n            dispatch({ type: 'SIGN_UP_ERROR', err  })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLink = () => {\r\n    return(\r\n       <ul className='right'>\r\n           <li><NavLink to='/signup'>Signup</NavLink></li>\r\n           <li><NavLink to='/signin'>Login</NavLink></li>\r\n       </ul>\r\n    )\r\n}\r\nexport default SignedOutLink","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './Signin'\r\nimport SignedOutLink from './Signout'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props\r\n    console.log('auth', auth)\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLink/>\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className='brand-logo'>Mario Plan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>   \r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = props => {\r\n    const { notification } = props\r\n    return (\r\n        <div className='section'>\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notification</span>\r\n                    <ul className='notifications'>\r\n                       {notification && notification.map(item=>(\r\n                            <li key={item.id}>\r\n                                <span className=\"pink-text\">{item.user}</span>\r\n                                <span>{item.content}</span>\r\n                                {/* <div className=\"grey-text note-date\">\r\n                                    {item.time.todate()}\r\n                                </div> */}\r\n                            </li>  \r\n                       ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nNotification.propTypes = {\r\n    \r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstname} {project.authorLastname}</p>\r\n                <p className=\"grey-text\"> 1st march 2020</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectSummary.propTypes = {\r\n    \r\n};\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className='project-list section'>\r\n            { projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>     \r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nProjectList.propTypes = {\r\n    \r\n};\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from './Notification'\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notification } = this.props;\r\n        \r\n        if(!auth.uid) return <Redirect to='/login' />\r\n\r\n        return (\r\n            <div className='dashboard container'>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notification notification={notification}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        // projects: state.project.projects\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notification: state.firestore.ordered.notification\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection:'projects', orderBy:['createdAt', 'desc'] },\r\n        { collection: 'notification', limit:3, orderBy:['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst ProjectDetail = (props) => {\r\n    const id = props.match.params.id\r\n    const { project, auth } = props\r\n    console.log('abcc',{ project })\r\n\r\n    if(!auth.uid) return <Redirect to='/login' />\r\n\r\n    if(project){\r\n        return (\r\n            <div className=' container section project-details'>\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action gret lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstname} {project.authorLastname}</div>\r\n                        <div>2nd march 10 am </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"container center\"> Loading Project ....</div>\r\n        )\r\n    }\r\n};\r\n\r\nProjectDetail.propTypes = {\r\n    \r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects; //get all projects\r\n    const project = projects ? projects[id] : null;// get project with specified id\r\n    return {\r\n        project: project, //update state equal to state got from projects\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetail);","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport class Signin extends Component {\r\n    state={\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log('object', this.state)\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth} = this.props\r\n        \r\n        if(auth.uid) return <Redirect to='/'/>\r\n        \r\n        \r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5> \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>   \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div> \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button> \r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : \"\"}\r\n                        </div>\r\n                    </div>  \r\n                </form>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        signIn: creds => dispatch(signIn(creds))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nexport class Signup extends Component {\r\n    state={\r\n        email: '',\r\n        password: '',\r\n        firstName:'',\r\n        lastName:'',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log('object', this.state)\r\n        this.props.signUp(this.state)\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if(auth.uid) return <Redirect to ='/' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5> \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>   \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div> \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"fisrtName\">Fisrt Name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange}/>\r\n                    </div>   \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange}/>\r\n                    </div> \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>  \r\n                    </div>  \r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{ authError}</p> : null}\r\n                    </div>\r\n                </form>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        signUp: newUser => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\r\n","import React, { Component } from 'react'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport {connect} from 'react-redux'\r\nimport {useHistory, Redirect} from 'react-router-dom'\r\n\r\nexport class CreateProject extends Component {\r\n    state={\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log('object', this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        if(!auth.uid) return <Redirect to='/login' />\r\n        return (\r\n            <div className='container'>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new Project</h5> \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id='title' onChange={this.handleChange}/>\r\n                    </div>   \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea name=\"content\" id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>  \r\n                    </div> \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>  \r\n                    </div>  \r\n                </form>  \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createProject: project => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstname: profile.firstName,\r\n            authorLastname: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type:'CREATE_PROJECT', project });\r\n        }).catch((err) =>{\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        } )\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetail from './components/projects/ProjectDetail';\nimport Signin from './components/auth/Signin';\nimport Signup from './components/auth/Signup';\nimport CreateProject from './components/projects/CreateProject';\n\n\nconst App =() => {\n  return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route  path='/project/:id' component={ProjectDetail} />\n            <Route  path='/signin' component={Signin} />\n            <Route  path='/signup' component={Signup} />\n            <Route  path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null,\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: \"Login Failed\"\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state ;\r\n        case 'SIGN_UP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            }\r\n        case 'SIGN_UP_ERROR':\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\nexport default authReducer","const initState = {\r\n    projects:[\r\n        {id: 1, title: 'learn react', content: 'basic react'},\r\n        {id: 2, title: 'learn angular', content: 'basic angular'},\r\n        {id: 3, title: 'learn nodejs', content: 'basic nodejs'},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('alo', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducers'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer,\r\n})\r\nexport default rootReducer"," import firebase from 'firebase/app'\r\n import 'firebase/firestore'// firebase database\r\n import 'firebase/auth' // firebase authentication\r\n // Your web app's Firebase configuration\r\n  var config = {\r\n    apiKey: \"AIzaSyAsaYeE6O-KjJ2ZtQuwmXtrv2nRimTcx3c\",\r\n    authDomain: \"authenticate-72782.firebaseapp.com\",\r\n    databaseURL: \"https://authenticate-72782.firebaseio.com\",\r\n    projectId: \"authenticate-72782\",\r\n    storageBucket: \"authenticate-72782.appspot.com\",\r\n    messagingSenderId: \"560616559113\",\r\n    appId: \"1:560616559113:web:01cdd12cbfd2c3e65c5ed8\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducers'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady: true}),\n    )\n);\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>\n        , document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}